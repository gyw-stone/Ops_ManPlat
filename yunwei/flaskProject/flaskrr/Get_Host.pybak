import requests
import json
import ssl
import re
import threading

from pyVmomi import vim
from pyVim import connect

def zabbix_gethost():
    """ 获取zabbix chengdu_server主机组的所有启用状态的主机"""
    # 设置 Zabbix API 访问参数
    #api_url = 'http://zabbix.cd.datagrand.com/api_jsonrpc.php'
    api_url = 'http://172.16.200.199:8080/api_jsonrpc.php'
    auth_token = '8179fd5daa4ad44f631acb13f163e9e3e4d69f66dc0cb9f62231320fe6e51ca5'

    # 构建 API 请求体
    headers = {'Content-Type': 'application/json-rpc'}
    data = {
        'jsonrpc': '2.0',
        'method': 'host.get',
        'params': {
            'output': ['hostid', 'host', 'name'],
            'groupids': "19",
        },
        'auth': auth_token,
        'id': 1
    }

    # 发送 API 请求
    response = requests.post(api_url, headers=headers, data=json.dumps(data), verify=False, timeout=10)
    result = response.json()

    # 存储列表
    s3 = []

    # 处理 API 响应
    if 'result' in result:
        hosts = result['result']
        for host in hosts:
            if host['hostid'] == '10463':
                pass
            else:
                s3.append([host['host'], host['name']])
    else:
        print(f"API Request Error: {result['error']['message']}")
    return s3
class VCenterHostGetter:
    """ 获取主机名以及对应的IP地址 """

    def __init__(self, host, user, password):
        self.host = host
        self.user = user
        self.password = password

    def process_vm(self, vm):
        vm_info = []
        if vm.runtime.powerState == "poweredOn":
            vm_name = vm.name

            for network in vm.guest.net:
                ip_address = network.ipAddress
                ip_address = str(ip_address)
                ip_matches = re.findall(r'\d+\.\d+\.\d+\.\d+', ip_address)
                if ip_matches:
                    ip_address = ip_matches[0]
                else:
                    ip_address = ""

                if not ip_address.endswith(".1"):
                    if ip_address.startswith("172"):
                        vm_info.append([vm_name, ip_address])

        return vm_info

    def get_host_info(self):
            # 定义 SSL 协议
            context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)
            context.verify_mode = ssl.CERT_NONE

            # 连接到 vCenter
            si = connect.SmartConnect(host=self.host,
                                      user=self.user,
                                      pwd=self.password,
                                      port=443,
                                      sslContext=context)

            # 获取 vCenter 中的虚拟主机（虚拟机）
            content = si.RetrieveContent()
            vm_view = content.viewManager.CreateContainerView(content.rootFolder, [vim.VirtualMachine], True)
            vms = vm_view.view

            vm_info_list = []
            threads = []

            # 遍历虚拟主机（虚拟机）并启动线程处理
            for vm in vms:
                t = threading.Thread(target=lambda x: vm_info_list.extend(self.process_vm(x)), args=(vm,))
                t.start()
                threads.append(t)

            # 等待所有线程完成
            for t in threads:
                t.join()

            # 断开与 vCenter 的连接
            connect.Disconnect(si)

            return vm_info_list

def diff_list():
    """ 实现获取两个列表不同的值并输出到一个文档中 """
    host = '172.26.23.210'
    user = 'guoyaowen@vsphere.local'
    password = 'DataGrand@123'

    host_getter = VCenterHostGetter(host, user, password)
    list1 = zabbix_gethost()
    vm_info_list = host_getter.get_host_info()
    # 提取第一个列表中的 IP 地址
    ip_list1 = [item[0] for item in list1]
    # 创建空字典
    different_ips_dict = {}
    def process(item):
        ip = item[1]
        key = item[0]
        if len(item) > 1 and item[1] not in ip_list1:
            if ip.startswith("172.16.83"):
                return
            else:
                different_ips_dict[ip] = key

    threads = []
    for item in vm_info_list:
        t = threading.Thread(target=process, args=(item,))
        threads.append(t)
        t.start()

    for t in threads:
        t.join()
    # 查找不同的IP地址和name
#    for item in vm_info_list:
#        if len(item) > 1 and item[1] not in ip_list1:
#            ip = item[1]
#            key = item[0]
            #if ip=='172.16.83.13':
#            if ip.startswith("172.16.83"):
#                continue
#            else:
#                different_ips_dict[ip] = key
    return different_ips_dict


def Create_host():
    """ 实现批量录入主机信息到zabbix,存在问题，重复录入，并且录入的IP为名字 """

    dict = diff_list()
    # 设置 Zabbix API 访问参数
    api_url = 'http://zabbix.cd.datagrand.com/api_jsonrpc.php'
    auth_token = 'a2bb879a3afa51ff6db05e4882f79803f93b4d48af047d026728446bcdc72add'

    # 构建 API 请求体
    headers = {'Content-Type': 'application/json-rpc'}

    for ip, value in dict.items():
        data = {
            "jsonrpc": "2.0",
            "method": "host.create",
            "params": {
                "host": ip,
                "name": value,
                "interfaces": [
                    {
                        "type": 1,
                        "main": 1,
                        "useip": 1,
                        "ip": ip,
                        "dns": "",
                        "port": "10050"
                    }
                ],
                "groups": [
                    {
                        "groupid": "19"
                    }
                ],
                "templates": [
                    {
                        "templateid": "10001"
                    }
                ],
            },
            "auth": auth_token,
            "id": 1
        }
        response = requests.post(api_url, headers=headers, data=json.dumps(data), verify=False)
        result = response.json()
        #print(result)
